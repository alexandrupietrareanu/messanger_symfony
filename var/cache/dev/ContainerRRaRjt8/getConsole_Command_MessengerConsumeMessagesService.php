<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'console.command.messenger_consume_messages' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/console/Command/Command.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Command/ConsumeMessagesCommand.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/RoutableMessageBus.php';

$this->privates['console.command.messenger_consume_messages'] = $instance = new \Symfony\Component\Messenger\Command\ConsumeMessagesCommand(new \Symfony\Component\Messenger\RoutableMessageBus(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'messenger.bus.default' => ['services', 'message_bus', 'getMessageBusService', false],
], [
    'messenger.bus.default' => '?',
]), ($this->services['message_bus'] ?? $this->getMessageBusService())), ($this->privates['messenger.receiver_locator'] ?? ($this->privates['messenger.receiver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []))), ($this->privates['monolog.logger.messenger'] ?? $this->load('getMonolog_Logger_MessengerService.php')), [], new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

$instance->setCachePoolForRestartSignal(($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()));
$instance->setName('messenger:consume');
$instance->setAliases([0 => 'messenger:consume-messages']);

return $instance;
